# Base de datos Neon
# Para desarrollo local, necesitas configurar una URL válida de Neon Database
# Ejemplo: DATABASE_URL=postgresql://username:password@ep-example.us-east-1.aws.neon.tech/neondb?sslmode=require
DATABASE_URL=postgresql://username:password@host/database

# Tokens de GitHub (opcional - solo si usas integración con GitHub)
# Obtén tus tokens en: https://github.com/settings/tokens
GITHUB_TOKEN=tu_token_de_github_aqui
GITHUB_TOKEN_WAOK=tu_token_secundario_aqui

# Configuración del entorno
NODE_ENV=development
PORT=5000

# Secreto de sesión (generar uno nuevo y seguro en producción)
# Puedes usar: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SESSION_SECRET=your-session-secret-key-here

# Configuración de Replit (para compatibilidad)
REPL_ID=local-development

# Cross-Browser Testing Configuration
# BrowserStack Configuration
BROWSERSTACK_USERNAME=your_browserstack_username
BROWSERSTACK_ACCESS_KEY=your_browserstack_access_key
BROWSERSTACK_BUILD_NAME=WAOK-Schedule Cross-Browser Tests
BROWSERSTACK_PROJECT_NAME=WAOK-Schedule

# Sauce Labs Configuration
SAUCE_USERNAME=your_sauce_username
SAUCE_ACCESS_KEY=your_sauce_access_key
SAUCE_BUILD_NAME=WAOK-Schedule Cross-Browser Tests
SAUCE_TUNNEL_NAME=waok-schedule-tunnel

# Test Configuration
BASE_URL=http://localhost:3000
TEST_TIMEOUT=30000
MAX_FAILURES=5
RETRIES=2
WORKERS=4

# Playwright Configuration
PLAYWRIGHT_BROWSERS_PATH=0
PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=false

# INSTRUCCIONES DE CONFIGURACIÓN:
# 1. Copia este archivo como .env
# 2. Actualiza DATABASE_URL con tu conexión real de Neon Database
# 3. Genera un SESSION_SECRET seguro para producción
# 4. Los tokens de GitHub son opcionales
# 5. Para cross-browser testing, configura las credenciales de BrowserStack o Sauce Labs
# 6. Ajusta BASE_URL según tu entorno de testing